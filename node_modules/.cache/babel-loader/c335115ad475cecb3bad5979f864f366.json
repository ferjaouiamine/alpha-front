{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP I5\\\\alpha-front\\\\src\\\\Components\\\\Navbar.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../context/userContext\";\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\nimport VpnKeyRoundedIcon from \"@material-ui/icons/VpnKeyRounded\";\nimport AddCircleOutlineRounded from \"@material-ui/icons/AddCircleOutlineRounded\";\nimport MenuBookRoundedIcon from \"@material-ui/icons/MenuBookRounded\";\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\nimport FaceSharpIcon from \"@material-ui/icons/FaceSharp\";\nimport PersonRoundedIcon from \"@material-ui/icons/PersonRounded\";\nimport AvantNav from \"./AvantNav\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  hide: {\n    display: \"none\"\n  },\n  button: {\n    margin: theme.spacing(1),\n    marginRight: \"90px\"\n  },\n  st: {\n    marginRight: \"-100px\"\n  }\n}));\nexport default function NavBar() {\n  const history = useHistory();\n  const classes = useStyles();\n  const {\n    userData,\n    setUserData\n  } = useContext(UserContext);\n  localStorage.setItem(\"isAuth\", userData.isAuth);\n  /*localStorage.setItem(\"admin\", userData.user.admin);\r\n  localStorage.setItem(\"role\", userData.role);*/\n\n  const logout = () => {\n    setUserData({\n      isAuth: false,\n      token: undefined,\n      user: undefined\n    });\n    localStorage.clear();\n    history.push(\"/signin\");\n  };\n\n  useEffect(() => {\n    const onChargeNavBar = () => {\n      if (userData.isAuth === false) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n          startIcon: /*#__PURE__*/React.createElement(HomeRoundedIcon, {\n            style: {\n              fill: \"white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 26\n            }\n          }),\n          className: classes.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"white\"\n          },\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }\n        }, \"ACCUEIL\")), /*#__PURE__*/React.createElement(Button, {\n          className: classes.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"white\"\n          },\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }\n        }, \"QUI SOMMES NOUS ?\")), /*#__PURE__*/React.createElement(Button, {\n          startIcon: /*#__PURE__*/React.createElement(VpnKeyRoundedIcon, {\n            style: {\n              fill: \"white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 26\n            }\n          }),\n          className: classes.button2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"white\"\n          },\n          to: \"/signin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }\n        }, \"LOGIN\")), /*#__PURE__*/React.createElement(Button, {\n          startIcon: /*#__PURE__*/React.createElement(AddCircleOutlineRounded, {\n            style: {\n              fill: \"white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 26\n            }\n          }),\n          className: classes.st,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"white\"\n          },\n          to: \"/signup\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }\n        }, \"INSCRIPTION\")));\n      }\n    };\n\n    const onChargeNavBarAuth = () => {\n      if (userData.role === \"0\" && userData.user.admin === true && userData.isAuth) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"white\"\n          },\n          to: \"/gestioneleves\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }\n        }, \"Gestion des \\xE9leves\")), /*#__PURE__*/React.createElement(Button, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"white\"\n          },\n          to: \"/gestioncours\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }\n        }, \"Gestion des cours\")), /*#__PURE__*/React.createElement(Button, {\n          startIcon: /*#__PURE__*/React.createElement(PersonRoundedIcon, {\n            style: {\n              fill: \"white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 26\n            }\n          }),\n          className: classes.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"white\"\n          },\n          to: \"/gestionprofs\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }\n        }, \"Gestion des profs\")), /*#__PURE__*/React.createElement(Button, {\n          onClick: logout,\n          startIcon: /*#__PURE__*/React.createElement(ExitToAppRoundedIcon, {\n            style: {\n              fill: \"white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 26\n            }\n          }),\n          className: classes.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"white\"\n          },\n          to: \"/signin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }\n        }, \"DECONNEXION\")));\n      }\n    };\n\n    const onChargeNavBarStudent = () => {\n      if (userData.role === \"1\") {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n          startIcon: /*#__PURE__*/React.createElement(MenuBookRoundedIcon, {\n            style: {\n              fill: \"white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 26\n            }\n          }),\n          className: classes.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"white\"\n          },\n          to: \"/courses\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }\n        }, \"Mes cours\")), /*#__PURE__*/React.createElement(Button, {\n          onClick: logout,\n          startIcon: /*#__PURE__*/React.createElement(ExitToAppRoundedIcon, {\n            style: {\n              fill: \"white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 26\n            }\n          }),\n          className: classes.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"white\"\n          },\n          to: \"/signin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }\n        }, \"DECONNEXION\")));\n      }\n    };\n\n    const onChangeNavBarProf = () => {\n      if (userData.role === \"0\") {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n          startIcon: /*#__PURE__*/React.createElement(FaceSharpIcon, {\n            style: {\n              fill: \"white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 26\n            }\n          }),\n          className: classes.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"white\"\n          },\n          to: \"/gestioneleves\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }\n        }, \"Gestion des \\xE9leves\")), /*#__PURE__*/React.createElement(Button, {\n          startIcon: /*#__PURE__*/React.createElement(MenuBookRoundedIcon, {\n            style: {\n              fill: \"white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 26\n            }\n          }),\n          className: classes.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"white\"\n          },\n          to: \"/gestioncours\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }\n        }, \"Gestion des cours\")), /*#__PURE__*/React.createElement(Button, {\n          onClick: logout,\n          startIcon: /*#__PURE__*/React.createElement(ExitToAppRoundedIcon, {\n            style: {\n              fill: \"white\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 26\n            }\n          }),\n          className: classes.button,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          style: {\n            textDecoration: \"none\",\n            color: \"white\"\n          },\n          to: \"/signin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }\n        }, \"DECONNEXION\")));\n      }\n    };\n\n    onChargeNavBar();\n    onChangeNavBarProf();\n    onChargeNavBarAuth();\n    onChargeNavBarStudent();\n  }, []);\n\n  const onChargeNavBar = () => {\n    if (userData.isAuth === false) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(HomeRoundedIcon, {\n          style: {\n            fill: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 24\n          }\n        }),\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }\n      }, \"ACCUEIL\")), /*#__PURE__*/React.createElement(Button, {\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }\n      }, \"QUI SOMMES NOUS ?\")), /*#__PURE__*/React.createElement(Button, {\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 12\n        }\n      }, \"CONTACT\")), /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(VpnKeyRoundedIcon, {\n          style: {\n            fill: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 24\n          }\n        }),\n        className: classes.st,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/signin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }\n      }, \"LOGIN\")), /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(AddCircleOutlineRounded, {\n          style: {\n            fill: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 24\n          }\n        }),\n        className: classes.button2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }\n      }, \"INSCRIPTION\")));\n    } else if (userData.role === \"0\" && userData.user.admin === true && userData.isAuth) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(FaceSharpIcon, {\n          style: {\n            fill: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 24\n          }\n        }),\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/gestioneleves\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }\n      }, \"Gestion des \\xE9leves\")), /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(MenuBookRoundedIcon, {\n          style: {\n            fill: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 24\n          }\n        }),\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/gestioncours\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }\n      }, \"Gestion des cours\")), /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(PersonRoundedIcon, {\n          style: {\n            fill: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 24\n          }\n        }),\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/gestionprofs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }\n      }, \"Gestion des profs\")), /*#__PURE__*/React.createElement(Button, {\n        onClick: logout,\n        startIcon: /*#__PURE__*/React.createElement(ExitToAppRoundedIcon, {\n          style: {\n            fill: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 24\n          }\n        }),\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/signin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }\n      }, \"DECONNEXION\")));\n    } else if (userData.role === \"0\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(FaceSharpIcon, {\n          style: {\n            fill: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 24\n          }\n        }),\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/gestioneleves\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }\n      }, \"Gestion des \\xE9leves\")), /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(MenuBookRoundedIcon, {\n          style: {\n            fill: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 24\n          }\n        }),\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/gestioncours\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }\n      }, \"Gestion des cours\")), /*#__PURE__*/React.createElement(Button, {\n        onClick: logout,\n        startIcon: /*#__PURE__*/React.createElement(ExitToAppRoundedIcon, {\n          style: {\n            fill: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 24\n          }\n        }),\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/signin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }\n      }, \"DECONNEXION\")));\n    } else if (userData.role === \"1\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(MenuBookRoundedIcon, {\n          style: {\n            fill: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 24\n          }\n        }),\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/courses\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }\n      }, \"Mes cours\")), /*#__PURE__*/React.createElement(Button, {\n        onClick: logout,\n        startIcon: /*#__PURE__*/React.createElement(ExitToAppRoundedIcon, {\n          style: {\n            fill: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 24\n          }\n        }),\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/signin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }\n      }, \"DECONNEXION\")));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginRight: 220\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 15\n    }\n  }, onChargeNavBar()))))));\n}","map":{"version":3,"sources":["C:/Users/HP I5/alpha-front/src/Components/Navbar.js"],"names":["React","useContext","useEffect","makeStyles","AppBar","Toolbar","Typography","Button","Grid","Link","useHistory","UserContext","HomeRoundedIcon","VpnKeyRoundedIcon","AddCircleOutlineRounded","MenuBookRoundedIcon","ExitToAppRoundedIcon","FaceSharpIcon","PersonRoundedIcon","AvantNav","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","hide","display","button","margin","st","NavBar","history","classes","userData","setUserData","localStorage","setItem","isAuth","logout","token","undefined","user","clear","push","onChargeNavBar","fill","textDecoration","color","button2","onChargeNavBarAuth","role","admin","onChargeNavBarStudent","onChangeNavBarProf"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../context/userContext\";\r\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\r\nimport VpnKeyRoundedIcon from \"@material-ui/icons/VpnKeyRounded\";\r\nimport AddCircleOutlineRounded from \"@material-ui/icons/AddCircleOutlineRounded\";\r\nimport MenuBookRoundedIcon from \"@material-ui/icons/MenuBookRounded\";\r\nimport ExitToAppRoundedIcon from \"@material-ui/icons/ExitToAppRounded\";\r\nimport FaceSharpIcon from \"@material-ui/icons/FaceSharp\";\r\nimport PersonRoundedIcon from \"@material-ui/icons/PersonRounded\";\r\nimport AvantNav from \"./AvantNav\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    marginRight: \"90px\"\r\n  \r\n   \r\n  },\r\nst:\r\n{\r\nmarginRight:\"-100px\"\r\n}\r\n\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const { userData, setUserData } = useContext(UserContext);\r\n  localStorage.setItem(\"isAuth\", userData.isAuth);\r\n  /*localStorage.setItem(\"admin\", userData.user.admin);\r\n  localStorage.setItem(\"role\", userData.role);*/\r\n\r\n  const logout = () => {\r\n    setUserData({\r\n      isAuth: false,\r\n      token: undefined,\r\n      user: undefined,\r\n    });\r\n    localStorage.clear();\r\n    history.push(\"/signin\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const onChargeNavBar = () => {\r\n      if (userData.isAuth === false) {\r\n        return (\r\n        <>\r\n        \r\n            <Button\r\n              startIcon={<HomeRoundedIcon style={{ fill: \"white\" }} />}\r\n              className={classes.button}\r\n            >\r\n              <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\r\n                ACCUEIL\r\n              </Link>\r\n            </Button>\r\n            <Button\r\n           \r\n              className={classes.button}\r\n            >\r\n              <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\r\n               QUI SOMMES NOUS ?\r\n              </Link>\r\n            </Button>\r\n            \r\n            <Button\r\n              startIcon={<VpnKeyRoundedIcon style={{ fill: \"white\" }} />}\r\n              className={classes.button2}\r\n            >\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/signin\"\r\n              >\r\n                LOGIN\r\n              </Link>\r\n            </Button>\r\n            <Button\r\n              startIcon={<AddCircleOutlineRounded style={{ fill: \"white\" }} />}\r\n              className={classes.st}\r\n            >\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/signup\"\r\n              >\r\n                INSCRIPTION\r\n              </Link>\r\n            </Button>\r\n          </>\r\n        );\r\n      }\r\n    };\r\n\r\n    const onChargeNavBarAuth = () => {\r\n      if (\r\n        userData.role === \"0\" &&\r\n        userData.user.admin === true &&\r\n        userData.isAuth\r\n      ) {\r\n        return (\r\n          <>\r\n            <Button>\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/gestioneleves\"\r\n              >\r\n                Gestion des éleves\r\n              </Link>\r\n            </Button>\r\n            <Button>\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/gestioncours\"\r\n              >\r\n                Gestion des cours\r\n              </Link>\r\n            </Button>\r\n            <Button\r\n              startIcon={<PersonRoundedIcon style={{ fill: \"white\" }} />}\r\n              className={classes.button}\r\n            >\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/gestionprofs\"\r\n              >\r\n                Gestion des profs\r\n              </Link>\r\n            </Button>\r\n            <Button\r\n              onClick={logout}\r\n              startIcon={<ExitToAppRoundedIcon style={{ fill: \"white\" }} />}\r\n              className={classes.button}\r\n            >\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/signin\"\r\n              >\r\n                DECONNEXION\r\n              </Link>\r\n            </Button>\r\n          </>\r\n        );\r\n      }\r\n    };\r\n\r\n    const onChargeNavBarStudent = () => {\r\n      if (userData.role === \"1\") {\r\n        return (\r\n          <>\r\n            <Button\r\n              startIcon={<MenuBookRoundedIcon style={{ fill: \"white\" }} />}\r\n              className={classes.button}\r\n            >\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/courses\"\r\n              >\r\n                Mes cours\r\n              </Link>\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={logout}\r\n              startIcon={<ExitToAppRoundedIcon style={{ fill: \"white\" }} />}\r\n              className={classes.button}\r\n            >\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/signin\"\r\n              >\r\n                DECONNEXION\r\n              </Link>\r\n            </Button>\r\n          </>\r\n        );\r\n      }\r\n    };\r\n\r\n    const onChangeNavBarProf = () => {\r\n      if (userData.role === \"0\") {\r\n        return (\r\n          <>\r\n            <Button\r\n              startIcon={<FaceSharpIcon style={{ fill: \"white\" }} />}\r\n              className={classes.button}\r\n            >\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/gestioneleves\"\r\n              >\r\n                Gestion des éleves\r\n              </Link>\r\n            </Button>\r\n            <Button\r\n              startIcon={<MenuBookRoundedIcon style={{ fill: \"white\" }} />}\r\n              className={classes.button}\r\n            >\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/gestioncours\"\r\n              >\r\n                Gestion des cours\r\n              </Link>\r\n            </Button>\r\n            <Button\r\n              onClick={logout}\r\n              startIcon={<ExitToAppRoundedIcon style={{ fill: \"white\" }} />}\r\n              className={classes.button}\r\n            >\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/signin\"\r\n              >\r\n                DECONNEXION\r\n              </Link>\r\n            </Button>\r\n          </>\r\n        );\r\n      }\r\n    };\r\n\r\n    onChargeNavBar();\r\n    onChangeNavBarProf();\r\n    onChargeNavBarAuth();\r\n    onChargeNavBarStudent();\r\n  }, []);\r\n\r\n  const onChargeNavBar = () => {\r\n    if (userData.isAuth === false) {\r\n      return (\r\n        <>\r\n        \r\n     \r\n          <Button \r\n            startIcon={<HomeRoundedIcon style={{ fill: \"white\" }} />}\r\n            className={classes.button} \r\n             \r\n          >\r\n            <Link  style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\" >\r\n              ACCUEIL\r\n            </Link>\r\n          </Button>\r\n          <Button\r\n            \r\n              className={classes.button}\r\n            >\r\n              <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\r\n               QUI SOMMES NOUS ?\r\n              </Link>\r\n            </Button>\r\n            <Button\r\n           \r\n           className={classes.button}\r\n         >\r\n           <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\"  >\r\n             CONTACT\r\n           </Link>\r\n         </Button>\r\n          <Button\r\n            startIcon={<VpnKeyRoundedIcon style={{ fill: \"white\" }} />}\r\n            className={classes.st}\r\n          >\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              to=\"/signin\"\r\n            >\r\n              LOGIN\r\n            </Link>\r\n          </Button>\r\n          <Button\r\n            startIcon={<AddCircleOutlineRounded style={{ fill: \"white\" }} />}\r\n            className={classes.button2}\r\n          >\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              to=\"/signup\"\r\n            >\r\n              INSCRIPTION\r\n            </Link>\r\n          </Button>\r\n        </>\r\n      );\r\n    } else if (\r\n      userData.role === \"0\" &&\r\n      userData.user.admin === true &&\r\n      userData.isAuth\r\n    ) {\r\n      return (\r\n        <>\r\n          <Button \r\n            startIcon={<FaceSharpIcon style={{ fill: \"white\" }} />}\r\n            className={classes.button}\r\n          >\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              to=\"/gestioneleves\"\r\n            >\r\n              Gestion des éleves\r\n            </Link>\r\n          </Button>\r\n          <Button\r\n            startIcon={<MenuBookRoundedIcon style={{ fill: \"white\" }} />}\r\n            className={classes.button}\r\n          >\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              to=\"/gestioncours\"\r\n            >\r\n              Gestion des cours\r\n            </Link>\r\n          </Button>\r\n          <Button\r\n            startIcon={<PersonRoundedIcon style={{ fill: \"white\" }} />}\r\n            className={classes.button}\r\n          >\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              to=\"/gestionprofs\"\r\n            >\r\n              Gestion des profs\r\n            </Link>\r\n          </Button>\r\n          <Button\r\n            onClick={logout}\r\n            startIcon={<ExitToAppRoundedIcon style={{ fill: \"white\" }} />}\r\n            className={classes.button}\r\n          >\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              to=\"/signin\"\r\n            >\r\n              DECONNEXION\r\n            </Link>\r\n          </Button>\r\n        </>\r\n      );\r\n    } else if (userData.role === \"0\") {\r\n      return (\r\n        <>\r\n          <Button\r\n            startIcon={<FaceSharpIcon style={{ fill: \"white\" }} />}\r\n            className={classes.button}\r\n          >\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              to=\"/gestioneleves\"\r\n            >\r\n              Gestion des éleves\r\n            </Link>\r\n          </Button>\r\n          <Button\r\n            startIcon={<MenuBookRoundedIcon style={{ fill: \"white\" }} />}\r\n            className={classes.button}\r\n          >\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              to=\"/gestioncours\"\r\n            >\r\n              Gestion des cours\r\n            </Link>\r\n          </Button>\r\n          <Button\r\n            onClick={logout}\r\n            startIcon={<ExitToAppRoundedIcon style={{ fill: \"white\" }} />}\r\n            className={classes.button}\r\n          >\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              to=\"/signin\"\r\n            >\r\n              DECONNEXION\r\n            </Link>\r\n          </Button>\r\n        </>\r\n      );\r\n    } else if (userData.role === \"1\") {\r\n      return (\r\n        <>\r\n          {}\r\n          <Button\r\n            startIcon={<MenuBookRoundedIcon style={{ fill: \"white\" }} />}\r\n            className={classes.button}\r\n          >\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              to=\"/courses\"\r\n            >\r\n              Mes cours\r\n            </Link>\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={logout}\r\n            startIcon={<ExitToAppRoundedIcon style={{ fill: \"white\" }} />}\r\n            className={classes.button}\r\n          >\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n              to=\"/signin\"\r\n            >\r\n              DECONNEXION\r\n            </Link>\r\n          </Button>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"column\">\r\n        <Grid item>\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" className={classes.title}></Typography>\r\n              <div style={{ marginRight: 220 }}>{onChargeNavBar()}</div>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}