{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP I5\\\\alpha-front\\\\src\\\\Components\\\\gestionCours.js\";\nimport { PlusOutlined } from '@ant-design/icons';\nimport Grid from \"@material-ui/core/Grid\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { Button } from 'antd';\nimport axios from \"axios\";\nimport MaterialTable from \"material-table\";\nimport React, { forwardRef, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../css/userDataTable.css\";\nconst tableIcons = {\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 35\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 37\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 37\n    }\n  }))),\n  Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 38\n    }\n  }))),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }))),\n  Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 36\n    }\n  }))),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 38\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 38\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 41\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 40\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 40\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 43\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 38\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 41\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 47\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 42\n    }\n  })))\n};\nconst api = axios.create({\n  baseURL: `http://localhost:3001/api/`\n});\n\nfunction GestionEleves() {\n  var columns = [{\n    title: \"id\",\n    field: \"id\",\n    hidden: true\n  }, {\n    title: \"Matière\",\n    field: \"courseName\"\n  },\n  /*{\r\n    \r\n    title: \"matiere\",\r\n    render: (rowData) => (\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          \r\n          onChange={handleChange}\r\n          \r\n          defaultValue={rowData.courseName}\r\n        >\r\n          <option aria-label=\"None\" value=\"\" />\r\n          <option value=\"math\">Math</option>\r\n          <option value=\"Physique\">Physique & Chimie</option>\r\n          <option value=\"Base de donnée\">Base de donnée</option>\r\n          <option value=\"algo\">Algorithme</option>\r\n          <option value=\"technique\">Technique</option>\r\n          <option value=\"arabic\">Arabe</option>\r\n          <option value=\"français\">Français</option>\r\n          <option value=\"anglais\">English</option>\r\n          <option value=\"science\">Science</option>\r\n          <option value=\"mecanique\">Mecanique</option>\r\n          <option value=\"eco\">économie</option>\r\n          <option value=\"gestion\">Gestion</option>\r\n        </Select>\r\n      </FormControl>\r\n    ),\r\n    \r\n  },*/\n  {\n    title: \"Chapitre\",\n    field: \"chapterName\"\n  }, {\n    title: \"Description\",\n    field: \"description\"\n  }, {\n    title: \"Classe\",\n    field: \"classe\"\n  }];\n  const [data, setData] = useState([]); //table data\n  //for error handling\n\n  const [iserror, setIserror] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [errorMessages, setErrorMessages] = useState([]);\n  let history = useHistory();\n  useEffect(() => {\n    const getCourses = async () => {\n      await api.get(\"/courses\").then(res => {\n        setData(res.data.data);\n        setLoading(false);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    getCourses();\n  }, [], [errorMessages], [iserror], [data]);\n\n  const handleRowDelete = async (oldData, resolve) => {\n    let id = oldData._id;\n    await api.delete(\"/course/\" + oldData._id).then(res => {\n      const dataDelete = [...data];\n      const index = oldData.tableData.id;\n      dataDelete.splice(index, 1);\n      setData([...dataDelete]);\n      resolve();\n    }).catch(error => {\n      setErrorMessages([\"Delete failed! Server error\"]);\n      setIserror(true);\n      resolve();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, iserror && /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, errorMessages.map((msg, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 26\n      }\n    }, msg);\n  }))), /*#__PURE__*/React.createElement(MaterialTable, {\n    style: {\n      marginTop: 50\n    },\n    title: \"Liste des cours\",\n    isLoading: loading,\n    columns: columns,\n    data: data,\n    icons: tableIcons,\n    localization: {\n      body: {\n        emptyDataSourceMessage: \"Pas d'enregistreent à afficher\",\n        addTooltip: \"Ajouter\",\n        deleteTooltip: \"Supprimer\",\n        editTooltip: \"Editer\",\n        filterRow: {\n          filterTooltip: \"Filtrer\"\n        },\n        editRow: {\n          deleteText: \"Voulez-vous supprimer cette ligne?\",\n          cancelTooltip: \"Annuler\",\n          saveTooltip: \"Enregistrer\"\n        }\n      },\n      grouping: {\n        placeholder: \"Tirer l'entête ...\",\n        groupedBy: \"Grouper par:\"\n      },\n      header: {\n        actions: \"Actions\"\n      },\n      pagination: {\n        labelDisplayedRows: \"{from}-{to} de {count}\",\n        labelRowsSelect: \"lignes\",\n        labelRowsPerPage: \"lignes par page:\",\n        firstAriaLabel: \"Première page\",\n        firstTooltip: \"Première page\",\n        previousAriaLabel: \"Page précédente\",\n        previousTooltip: \"Page précédente\",\n        nextAriaLabel: \"Page suivante\",\n        nextTooltip: \"Page suivante\",\n        lastAriaLabel: \"Dernière page\",\n        lastTooltip: \"Dernière page\"\n      },\n      toolbar: {\n        addRemoveColumns: \"Ajouter ou supprimer des colonnes\",\n        nRowsSelected: \"{0} ligne(s) sélectionée(s)\",\n        showColumnsTitle: \"Voir les colonnes\",\n        showColumnsAriaLabel: \"Voir les colonnes\",\n        exportTitle: \"Exporter\",\n        exportAriaLabel: \"Exporter\",\n        exportName: \"Exporter en CSV\",\n        searchTooltip: \"Chercher\",\n        searchPlaceholder: \"Chercher\"\n      }\n    },\n    editable: {\n      /*onRowUpdate: (newData, oldData) =>\r\n        new Promise((resolve) => {\r\n          handleRowUpdate(newData, oldData, resolve);\r\n        }),*/\n      onRowDelete: oldData => new Promise(resolve => {\n        handleRowDelete(oldData, resolve);\n      })\n    },\n    actions: [{\n      icon: () => /*#__PURE__*/React.createElement(Edit, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 29\n        }\n      }),\n      tooltip: \"modifier\",\n      onClick: (event, rowData) => {\n        history.push({\n          pathname: \"/updateCourse\",\n          state: {\n            rowData: rowData\n          }\n        });\n      }\n    }, {\n      icon: () => /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        style: {\n          color: \"white\"\n        },\n        shape: \"circle\",\n        icon: /*#__PURE__*/React.createElement(PlusOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 99\n          }\n        }),\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 29\n        }\n      }),\n      tooltip: \"Ajouter un cours\",\n      isFreeAction: true,\n      onClick: () => history.push(\"/addCourse\")\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default GestionEleves;","map":{"version":3,"sources":["C:/Users/HP I5/alpha-front/src/Components/gestionCours.js"],"names":["PlusOutlined","Grid","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","Alert","Button","axios","MaterialTable","React","forwardRef","useEffect","useState","useHistory","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","api","create","baseURL","GestionEleves","columns","title","field","hidden","data","setData","iserror","setIserror","loading","setLoading","errorMessages","setErrorMessages","history","getCourses","get","then","res","catch","error","console","log","handleRowDelete","oldData","resolve","id","_id","delete","dataDelete","index","tableData","splice","map","msg","i","marginTop","body","emptyDataSourceMessage","addTooltip","deleteTooltip","editTooltip","filterRow","filterTooltip","editRow","deleteText","cancelTooltip","saveTooltip","grouping","placeholder","groupedBy","header","actions","pagination","labelDisplayedRows","labelRowsSelect","labelRowsPerPage","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","toolbar","addRemoveColumns","nRowsSelected","showColumnsTitle","showColumnsAriaLabel","exportTitle","exportAriaLabel","exportName","searchTooltip","searchPlaceholder","onRowDelete","Promise","icon","tooltip","onClick","event","rowData","push","pathname","state","color","isFreeAction"],"mappings":"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","sourcesContent":["import { PlusOutlined } from '@ant-design/icons';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Button } from 'antd';\r\nimport axios from \"axios\";\r\nimport MaterialTable from \"material-table\";\r\nimport React, { forwardRef, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../css/userDataTable.css\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst api = axios.create({\r\n  baseURL: `http://localhost:3001/api/`,\r\n});\r\n\r\nfunction GestionEleves() {\r\n  var columns = [\r\n    { title: \"id\", field: \"id\", hidden: true },\r\n    { title: \"Matière\", field: \"courseName\" },\r\n    /*{\r\n      \r\n      title: \"matiere\",\r\n      render: (rowData) => (\r\n        <FormControl className={classes.formControl}>\r\n          <Select\r\n            \r\n            onChange={handleChange}\r\n            \r\n            defaultValue={rowData.courseName}\r\n          >\r\n            <option aria-label=\"None\" value=\"\" />\r\n            <option value=\"math\">Math</option>\r\n            <option value=\"Physique\">Physique & Chimie</option>\r\n            <option value=\"Base de donnée\">Base de donnée</option>\r\n            <option value=\"algo\">Algorithme</option>\r\n            <option value=\"technique\">Technique</option>\r\n            <option value=\"arabic\">Arabe</option>\r\n            <option value=\"français\">Français</option>\r\n            <option value=\"anglais\">English</option>\r\n            <option value=\"science\">Science</option>\r\n            <option value=\"mecanique\">Mecanique</option>\r\n            <option value=\"eco\">économie</option>\r\n            <option value=\"gestion\">Gestion</option>\r\n          </Select>\r\n        </FormControl>\r\n      ),\r\n      \r\n    },*/\r\n    { title: \"Chapitre\", field: \"chapterName\" },\r\n    { title: \"Description\", field: \"description\" },\r\n    { title: \"Classe\", field: \"classe\" },\r\n  ];\r\n  const [data, setData] = useState([]); //table data\r\n\r\n  //for error handling\r\n  const [iserror, setIserror] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n  let history = useHistory();\r\n\r\n  useEffect(\r\n    () => {\r\n      const getCourses = async () => {\r\n        await api\r\n          .get(\"/courses\")\r\n          .then((res) => {\r\n            setData(res.data.data);\r\n            setLoading(false);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      };\r\n      getCourses();\r\n    },\r\n    [],\r\n    [errorMessages],\r\n    [iserror],\r\n    [data]\r\n  );\r\n\r\n  const handleRowDelete = async (oldData, resolve) => {\r\n    let id = oldData._id;\r\n    await api\r\n      .delete(\"/course/\" + oldData._id)\r\n      .then((res) => {\r\n        const dataDelete = [...data];\r\n        const index = oldData.tableData.id;\r\n        dataDelete.splice(index, 1);\r\n        setData([...dataDelete]);\r\n        resolve();\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessages([\"Delete failed! Server error\"]);\r\n        setIserror(true);\r\n        resolve();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={3}></Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <div>\r\n            {iserror && (\r\n              <Alert severity=\"error\">\r\n                {errorMessages.map((msg, i) => {\r\n                  return <div key={i}>{msg}</div>;\r\n                })}\r\n              </Alert>\r\n            )}\r\n          </div>\r\n\r\n          <MaterialTable\r\n            style={{ marginTop: 50 }}\r\n            title=\"Liste des cours\"\r\n            isLoading={loading}\r\n            columns={columns}\r\n            data={data}\r\n            icons={tableIcons}\r\n            localization={{\r\n              body: {\r\n                emptyDataSourceMessage: \"Pas d'enregistreent à afficher\",\r\n                addTooltip: \"Ajouter\",\r\n                deleteTooltip: \"Supprimer\",\r\n                editTooltip: \"Editer\",\r\n                filterRow: {\r\n                  filterTooltip: \"Filtrer\",\r\n                },\r\n                editRow: {\r\n                  deleteText: \"Voulez-vous supprimer cette ligne?\",\r\n                  cancelTooltip: \"Annuler\",\r\n                  saveTooltip: \"Enregistrer\",\r\n                },\r\n              },\r\n              grouping: {\r\n                placeholder: \"Tirer l'entête ...\",\r\n                groupedBy: \"Grouper par:\",\r\n              },\r\n              header: {\r\n                actions: \"Actions\",\r\n              },\r\n              pagination: {\r\n                labelDisplayedRows: \"{from}-{to} de {count}\",\r\n                labelRowsSelect: \"lignes\",\r\n                labelRowsPerPage: \"lignes par page:\",\r\n                firstAriaLabel: \"Première page\",\r\n                firstTooltip: \"Première page\",\r\n                previousAriaLabel: \"Page précédente\",\r\n                previousTooltip: \"Page précédente\",\r\n                nextAriaLabel: \"Page suivante\",\r\n                nextTooltip: \"Page suivante\",\r\n                lastAriaLabel: \"Dernière page\",\r\n                lastTooltip: \"Dernière page\",\r\n              },\r\n              toolbar: {\r\n                addRemoveColumns: \"Ajouter ou supprimer des colonnes\",\r\n                nRowsSelected: \"{0} ligne(s) sélectionée(s)\",\r\n                showColumnsTitle: \"Voir les colonnes\",\r\n                showColumnsAriaLabel: \"Voir les colonnes\",\r\n                exportTitle: \"Exporter\",\r\n                exportAriaLabel: \"Exporter\",\r\n                exportName: \"Exporter en CSV\",\r\n                searchTooltip: \"Chercher\",\r\n                searchPlaceholder: \"Chercher\",\r\n              },\r\n            }}\r\n            editable={{\r\n              /*onRowUpdate: (newData, oldData) =>\r\n                new Promise((resolve) => {\r\n                  handleRowUpdate(newData, oldData, resolve);\r\n                }),*/\r\n\r\n              onRowDelete: (oldData) =>\r\n                new Promise((resolve) => {\r\n                  handleRowDelete(oldData, resolve);\r\n                }),\r\n            }}\r\n            actions={[\r\n              {\r\n                icon: () => <Edit />,\r\n                tooltip: \"modifier\",\r\n                onClick: (event, rowData) => {\r\n                  history.push({\r\n                    pathname: \"/updateCourse\",\r\n                    state: { rowData: rowData },\r\n                  });\r\n                },\r\n              },\r\n              {\r\n                icon: () => <Button type=\"primary\" style={{color : \"white\"}} shape=\"circle\" icon={<PlusOutlined />} size=\"large\" />,\r\n                tooltip: \"Ajouter un cours\",\r\n                isFreeAction: true,\r\n                onClick: () => history.push(\"/addCourse\"),\r\n              },\r\n            ]}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={3}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GestionEleves;\r\n"]},"metadata":{},"sourceType":"module"}